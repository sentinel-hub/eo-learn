name: build

on:
  pull_request:
  push:
    branches:
      - "master"
      - "develop"
  schedule:
    # Schedule events are triggered by whoever last changed the cron schedule
    - cron: "5 0 * * *"

env:
  # The only way to simulate if-else statement
  CHECKOUT_BRANCH: ${{ github.event_name == 'schedule' && 'develop' || github.ref }}

jobs:
  check-pre-commit-hooks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: ${{ env.CHECKOUT_BRANCH }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
          architecture: x64

      - name: Prepare pre-commit validators
        run: |
          pip install pre-commit

      - name: Check code compliance with pre-commit validators
        run: pre-commit run --all-files

  check-code-pylint-and-mypy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: ${{ env.CHECKOUT_BRANCH }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
          architecture: x64

      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgdal-dev graphviz proj-bin gcc libproj-dev libspatialindex-dev
          pip install -r requirements-dev.txt --upgrade
          python install_all.py -e

      - name: Run pylint
        run: make pylint

      - name: Run mypy
        run: |
          mypy core/eolearn/core
          mypy geometry/eolearn/geometry
          mypy features/eolearn/features
          mypy ml_tools/eolearn/ml_tools
          mypy visualization/eolearn/visualization

  test-on-github:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.9"
          - "3.10"
        include:
          # A flag marks whether full or partial tests should be run
          # We don't run integration tests on pull requests from outside repos, because they don't have secrets
          - python-version: "3.8"
            full_test_suite: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: ${{ env.CHECKOUT_BRANCH }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgdal-dev graphviz proj-bin gcc libproj-dev libspatialindex-dev
          pip install -r requirements-dev.txt --upgrade
          python install_all.py -e

      - name: Run full tests and code coverage
        if: ${{ matrix.full_test_suite }}
        run: |
          sentinelhub.config \
            --sh_client_id "${{ secrets.SH_CLIENT_ID }}" \
            --sh_client_secret "${{ secrets.SH_CLIENT_SECRET }}"
          pytest --cov --cov-report=term --cov-report=xml

      - name: Run reduced tests
        if: ${{ !matrix.full_test_suite }}
        run: |
          pytest -m "not sh_integration"

      - name: Upload code coverage
        if: ${{ matrix.full_test_suite }}
        uses: codecov/codecov-action@v2
        with:
          files: coverage.xml
          fail_ci_if_error: true
          verbose: false

  mirror-and-integration-test-on-gitlab:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Mirror + trigger CI
        uses: SvanBoxel/gitlab-mirror-and-ci-action@master
        with:
          args: "https://git.sinergise.com/eo/code/eo-learn/"
        env:
          GITLAB_HOSTNAME: "git.sinergise.com"
          GITLAB_USERNAME: "github-action"
          GITLAB_PASSWORD: ${{ secrets.GITLAB_PASSWORD }}
          GITLAB_PROJECT_ID: "164"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
